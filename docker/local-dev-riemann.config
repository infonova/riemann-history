; -*- mode: clojure; -*-
; vim: filetype=clojure

(load-plugins)

(require '[riemann-history.core :as history])


(logging/init {:file "riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

(repl-server {:port 5558 :host "0.0.0.0"})

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(def request-history
  (history/history {:name :requests-per-day-hour
                    :connect "http://elasticsearch:9200"
                    :url "_search"
                    :interval 600
                    :query "/etc/riemann-history/elasticsearch.json"}))

(let [index (default :ttl 120 (index))]
  (streams
    (fn [e]
      (info
        (history/get-history-data
          :requests-per-day-hour
          (history/generate-key-from-epoch (:time e)))))))

(comment (let [index (index)])
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))

